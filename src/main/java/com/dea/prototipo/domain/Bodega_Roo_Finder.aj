// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dea.prototipo.domain;

import com.dea.prototipo.domain.Bodega;
import com.dea.prototipo.domain.Usuario;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Bodega_Roo_Finder {
    
    public static Long Bodega.countFindBodegasByUsuario(Usuario usuario) {
        if (usuario == null) throw new IllegalArgumentException("The usuario argument is required");
        EntityManager em = Bodega.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Bodega AS o WHERE o.usuario = :usuario", Long.class);
        q.setParameter("usuario", usuario);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Bodega> Bodega.findBodegasByUsuario(Usuario usuario) {
        if (usuario == null) throw new IllegalArgumentException("The usuario argument is required");
        EntityManager em = Bodega.entityManager();
        TypedQuery<Bodega> q = em.createQuery("SELECT o FROM Bodega AS o WHERE o.usuario = :usuario", Bodega.class);
        q.setParameter("usuario", usuario);
        return q;
    }
    
    public static TypedQuery<Bodega> Bodega.findBodegasByUsuario(Usuario usuario, String sortFieldName, String sortOrder) {
        if (usuario == null) throw new IllegalArgumentException("The usuario argument is required");
        EntityManager em = Bodega.entityManager();
        String jpaQuery = "SELECT o FROM Bodega AS o WHERE o.usuario = :usuario";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Bodega> q = em.createQuery(jpaQuery, Bodega.class);
        q.setParameter("usuario", usuario);
        return q;
    }
    
}
